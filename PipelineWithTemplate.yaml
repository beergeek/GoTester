pipeline:
  name: LetsTryThisWithGo
  identifier: LetsTryThisWithGo
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: GitHubConnector
        repoName: GoTester
        build: <+input>
  stages:
    - stage:
        name: Build
        identifier: Build
        description: ""
        type: CI
        spec:
          caching:
            enabled: true
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Get Dependencies
                  identifier: Get_Dependencies
                  spec:
                    shell: Bash
                    command: |-
                      export PATH=$PATH:/usr/local/go/bin
                      wget https://go.dev/dl/go1.24.1.linux-amd64.tar.gz
                      rm -rf /usr/local/go
                      tar -C /usr/local -xzf go1.24.1.linux-amd64.tar.gz
              - step:
                  type: Run
                  name: Test
                  identifier: Test
                  spec:
                    shell: Bash
                    command: |-
                      export PATH=$PATH:/usr/local/go/bin
                      go get
                      go test -v .
              - step:
                  type: Run
                  name: Build
                  identifier: Build
                  spec:
                    shell: Bash
                    command: |-
                      export PATH=$PATH:/usr/local/go/bin
                      go build -o weatherservice .
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Build and Push Docker Image
                  identifier: Build_and_Push_Docker_Image
                  spec:
                    connectorRef: DockerReg
                    repo: beergeek1679/weatherservice
                    tags:
                      - <+pipeline.sequenceId>
                      - latest
                    dockerfile: Dockerfile
    - stage:
        name: DeployToK8S
        identifier: DeployToK8S
        tags: {}
        template:
          templateRef: K8sDeploy
          versionLabel: v1.0
          templateInputs:
            type: Deployment
            spec:
              environment:
                environmentRef: <+input>
                environmentInputs: <+input>
                serviceOverrideInputs: <+input>
                infrastructureDefinitions: <+input>
              service:
                serviceRef: <+input>
                serviceInputs: <+input>
